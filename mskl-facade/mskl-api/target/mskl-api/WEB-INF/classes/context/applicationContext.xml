<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

   <context:component-scan base-package="com.mskl"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          xmlns:util="http://www.springframework.org/schema/util">

        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:conf.properties</value>
                <value>classpath:log4j.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close" lazy-init="false">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
    </bean>


    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}" />
        <property name="usePool" value="true" />
        <property name="database" value="${redis.database.cache}" />
        <property name="poolConfig">
            <bean class="redis.clients.jedis.JedisPoolConfig">
                <property name="maxTotal" value="200" />
                <property name="maxIdle" value="100" />
                <property name="minIdle" value="50" />
            </bean>
        </property>
    </bean>

    <bean id="redisClient" class="com.mskl.service.redis.impl.BasicRedisClient">
        <property name="redisTemplate">
            <bean class="org.springframework.data.redis.core.StringRedisTemplate">
                <property name="connectionFactory" ref="jedisConnectionFactory" />
            </bean>
        </property>
    </bean>
    <!--<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource"></property>-->
    <!--</bean>-->

    <!--<tx:advice id="userTxAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="delete*" propagation="REQUIRED" read-only="false"-->
                       <!--rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>-->
            <!--<tx:method name="insert*" propagation="REQUIRED" read-only="false"-->
                       <!--rollback-for="java.lang.RuntimeException"/>-->
            <!--<tx:method name="update*" propagation="REQUIRED" read-only="false"-->
                       <!--rollback-for="java.lang.Exception"/>-->
            <!--<tx:method name="use*" propagation="REQUIRED" read-only="false"-->
                       <!--rollback-for="java.lang.Exception"/>-->
            <!--<tx:method name="roughly*" propagation="REQUIRED" read-only="false"-->
                       <!--rollback-for="java.lang.Exception"/>-->
            <!--<tx:method name="share*" propagation="REQUIRED" read-only="false"-->
                       <!--rollback-for="java.lang.Exception"/>-->
            <!--<tx:method name="find*" propagation="SUPPORTS"/>-->
            <!--<tx:method name="get*" propagation="SUPPORTS"/>-->
            <!--<tx:method name="select*" propagation="SUPPORTS"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<aop:config>-->
        <!--<aop:pointcut id="pc"-->
                      <!--expression="execution(public * com.jlc.bpo.write.*.*(..))"/>-->
        <!--&lt;!&ndash;把事务控制在Service层&ndash;&gt;-->
        <!--<aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice"/>-->
    <!--</aop:config>-->

</beans>